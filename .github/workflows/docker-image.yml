name: Docker Image CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Lint Dockerfile with Hadolint
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        failure-threshold: error 
        
    - name: Login to GitHub Container Registry (if needed)
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:${{ github.sha }}
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:v5.2.3
    - name: Trivy vulnerability scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ghcr.io/${{ github.repository }}:${{ github.sha }}'
        ignore-unfixed: 'true'
      
    - name: Run container tests
      run: |
        set -e
        IMAGE=ghcr.io/${{ github.repository }}:${{ github.sha }}
        CONTAINER=spiderfoot-test

        # CLI tests
        docker run --rm $IMAGE sf.py -h
        docker run --rm $IMAGE sf.py --version

        # Start container in background
        docker run -d --name $CONTAINER -p 5001:5001 -p 8001:8001 $IMAGE

        # Check for errors in logs
        if docker logs $CONTAINER 2>&1 | grep -iE 'Traceback|ERROR|Exception'; then
          echo 'Errors found in container logs';
          docker logs $CONTAINER;
          docker stop $CONTAINER;
          exit 1;
        fi

        # Clean up
        docker stop $CONTAINER
